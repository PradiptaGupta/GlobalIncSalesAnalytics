{
	"name": "pl-usdailysales-source-to-landing",
	"properties": {
		"activities": [
			{
				"name": "Get US Source Excel file Sheet names",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set variable10",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_ussalesinputformat",
						"type": "DatasetReference",
						"parameters": {
							"ConfigFileContainer": {
								"value": "@variables('US_S2L_SalesConfigFileContainerName')",
								"type": "Expression"
							},
							"ConfigContainerURL": {
								"value": "@variables('US_S2L_SalesConfigFileContainerURL')",
								"type": "Expression"
							},
							"ConfigContainerSPN": {
								"value": "@variables('US_S2L_SPNID')",
								"type": "Expression"
							},
							"ConfigContainerSPNSecret": {
								"value": "@variables('US_S2L_SPNSecretName')",
								"type": "Expression"
							},
							"ConfigKVURL": {
								"value": "@variables('US_S2L_KVURL')",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Loop Through US Sales Source Excel file Sheets",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get US Source Excel file Sheet names",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get US Source Excel file Sheet names').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 2,
					"activities": [
						{
							"name": "Copy US Sales",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ExcelSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": {
											"value": "@formatDateTime(variables('US_S2L_PipelineRunDate'),'dd-MMM-yyyy')",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@concat('US_Sales_',formatDateTime(variables('US_S2L_PipelineRunDate'),'dd-MMM-yyyy'),'.xlsx')",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_us_sales_input",
									"type": "DatasetReference",
									"parameters": {
										"SheetName": {
											"value": "@item().Sheet",
											"type": "Expression"
										},
										"USSalesInputKVURL": {
											"value": "@variables('US_S2L_KVURL')",
											"type": "Expression"
										},
										"USSalesInputContainerURL": {
											"value": "@variables('US_S2L_USSalesSourceContainerURL')",
											"type": "Expression"
										},
										"USSalesInputSPNID": {
											"value": "@variables('US_S2L_SPNID')",
											"type": "Expression"
										},
										"USSalesInputSPNSecretName": {
											"value": "@variables('US_S2L_SPNSecretName')",
											"type": "Expression"
										},
										"USSalesInputContainerName": {
											"value": "@variables('US_S2L_USSalesSourceContainerName')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_us_sales_output",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@item().Sheet",
											"type": "Expression"
										},
										"USSalesOutputKVURL": {
											"value": "@variables('US_S2L_KVURL')",
											"type": "Expression"
										},
										"USSalesOutputContainerURL": {
											"value": "@variables('US_S2L_USSalesLandingContainerURL')",
											"type": "Expression"
										},
										"USSalesOutputSPNID": {
											"value": "@variables('US_S2L_SPNID')",
											"type": "Expression"
										},
										"USSalesOutputSPNSecretName": {
											"value": "@variables('US_S2L_SPNSecretName')",
											"type": "Expression"
										},
										"USSalesOutputContainerName": {
											"value": "@variables('US_S2L_USSalesLandingContainerName')",
											"type": "Expression"
										},
										"USSalesPipelineRunDate": {
											"value": "@variables('US_S2L_PipelineRunDate')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_SalesConfigFileContainerURL",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SalesConfigFileContainerURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_SPNID",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SPNID, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable3",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_SPNSecretName",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SPNSecretName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable4",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable3",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_USSalesSourceContainerURL",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_USSalesSourceContainerURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable5",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable4",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_USSalesLandingContainerURL",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_USSalesLandingContainerURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable6",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable5",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_KVURL",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_KVURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable7",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable6",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_SalesConfigFileContainerName",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SalesConfigFileContainerName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable8",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable7",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_USSalesSourceContainerName",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_USSalesSourceContainerName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable9",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable8",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_USSalesLandingContainerName",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_USSalesLandingContainerName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable10",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable9",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "US_S2L_PipelineRunDate",
					"value": {
						"value": "@pipeline().parameters.RunDate",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"RunDate": {
				"type": "string",
				"defaultValue": "dd-MMM-yyyy"
			}
		},
		"variables": {
			"US_S2L_SalesConfigFileContainerURL": {
				"type": "String"
			},
			"US_S2L_SPNID": {
				"type": "String"
			},
			"US_S2L_SPNSecretName": {
				"type": "String"
			},
			"US_S2L_USSalesSourceContainerURL": {
				"type": "String"
			},
			"US_S2L_USSalesLandingContainerURL": {
				"type": "String"
			},
			"US_S2L_KVURL": {
				"type": "String"
			},
			"US_S2L_SalesConfigFileContainerName": {
				"type": "String"
			},
			"US_S2L_USSalesSourceContainerName": {
				"type": "String"
			},
			"US_S2L_USSalesLandingContainerName": {
				"type": "String"
			},
			"US_S2L_PipelineRunDate": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-07-03T08:51:41Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}