{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-globalsales-analytics"
		},
		"lnk_HK_SGP_daily_sales_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().ContainerURL}"
		},
		"lnk_HK_SGP_daily_sales_source_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "c42ed202-1ca3-48c8-bacd-c874383e5727"
		},
		"lnk_HK_SGP_daily_sales_source_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "@{linkedService().SPNID}"
		},
		"lnk_globalsales_kv_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().KVURL}"
		},
		"lnk_jp_daily_sales_source_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "@{linkedService().JP_SFTPURL}"
		},
		"lnk_jp_daily_sales_source_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().JP_SFTPUserName}"
		},
		"lnk_sales_analytics_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().ContainerURL}"
		},
		"lnk_sales_analytics_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "c42ed202-1ca3-48c8-bacd-c874383e5727"
		},
		"lnk_sales_analytics_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "@{linkedService().SPNID}"
		},
		"lnk_us_daily_sales_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().ContainerURL}"
		},
		"lnk_us_daily_sales_source_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "c42ed202-1ca3-48c8-bacd-c874383e5727"
		},
		"lnk_us_daily_sales_source_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "@{linkedService().SPNID}"
		},
		"lnk_us_sales_input_format_config_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().ContainerURL}"
		},
		"lnk_us_sales_input_format_config_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "c42ed202-1ca3-48c8-bacd-c874383e5727"
		},
		"lnk_us_sales_input_format_config_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "@{linkedService().SPNID}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl-HK-SGP-daily-sales-source-to-landing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy HK and SGP daily Sales files from S2L",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Run Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": {
										"value": "@formatDateTime(variables('HKSGP_S2L_PipelineRunDate'),'dd-MMM-yyyy')",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@concat('ASIA_Sales_',formatDateTime(variables('HKSGP_S2L_PipelineRunDate'),'dd-MMM-yyyy'),'.zip')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_HK_SGP_sales_input",
								"type": "DatasetReference",
								"parameters": {
									"HKSGPSalesInputKVURL": {
										"value": "@variables('HK_SGP_S2L_KVURL')",
										"type": "Expression"
									},
									"HKSGPContainerURL": {
										"value": "@variables('HK_SGP_S2L_SalesSourceContainerURL')",
										"type": "Expression"
									},
									"HKSGPSPNID": {
										"value": "@variables('HK_SGP_S2L_SPNID')",
										"type": "Expression"
									},
									"HKSGPSPNSecretName": {
										"value": "@variables('HK_SGP_S2L_SPNSecretName')",
										"type": "Expression"
									},
									"HKSGPSalesInputContainerName": {
										"value": "@variables('HK_SGP_S2L_SalesSourceContainerName')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_HK_SGP_sales_output",
								"type": "DatasetReference",
								"parameters": {
									"HKSGPSalesOutputKVURL": {
										"value": "@variables('HK_SGP_S2L_KVURL')",
										"type": "Expression"
									},
									"HKSGPSalesOutputContainerURL": {
										"value": "@variables('HK_SGP_S2L_SalesLandingContainerURL')",
										"type": "Expression"
									},
									"HKSGPSalesOutputSPNID": {
										"value": "@variables('HK_SGP_S2L_SPNID')",
										"type": "Expression"
									},
									"HKSGPSalesOutputSPNSecretName": {
										"value": "@variables('HK_SGP_S2L_SPNSecretName')",
										"type": "Expression"
									},
									"HKSGPSalesOutputContainerName": {
										"value": "@variables('HK_SGP_S2L_SalesLandingContainerName')",
										"type": "Expression"
									},
									"HKSGPSalesPipelineRunDate": {
										"value": "@variables('HKSGP_S2L_PipelineRunDate')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set SPN ID",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HK_SGP_S2L_SPNID",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SPNID, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set SPN SecretName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set SPN ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HK_SGP_S2L_SPNSecretName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SPNSecretName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set SourceContainer URL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set SPN SecretName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HK_SGP_S2L_SalesSourceContainerURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_HKSGPSalesSourceContainerURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Source Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set SourceContainer URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HK_SGP_S2L_SalesSourceContainerName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_HKSGPSalesSourceContainerName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Container URL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Source Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HK_SGP_S2L_SalesLandingContainerURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_HKSGPSalesLandingContainerURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Landing Container URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HK_SGP_S2L_SalesLandingContainerName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_HKSGPSalesLandingContainerName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set KV URL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Landing Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HK_SGP_S2L_KVURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_KVURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Run Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set KV URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HKSGP_S2L_PipelineRunDate",
							"value": {
								"value": "@pipeline().parameters.RunDate",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"RunDate": {
						"type": "string",
						"defaultValue": "dd-MMM-yyyy"
					}
				},
				"variables": {
					"HK_SGP_S2L_SPNID": {
						"type": "String"
					},
					"HK_SGP_S2L_SPNSecretName": {
						"type": "String"
					},
					"HK_SGP_S2L_SalesSourceContainerURL": {
						"type": "String"
					},
					"HK_SGP_S2L_SalesLandingContainerURL": {
						"type": "String"
					},
					"HK_SGP_S2L_KVURL": {
						"type": "String"
					},
					"HK_SGP_S2L_SalesSourceContainerName": {
						"type": "String"
					},
					"HK_SGP_S2L_SalesLandingContainerName": {
						"type": "String"
					},
					"HKSGP_S2L_PipelineRunDate": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_HK_SGP_sales_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_HK_SGP_sales_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl-global-sales-source-to-landing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute US Source To Landing Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl-us-daily-sales-source-to-landing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"RunDate": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute HK SGP Source To Landing Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute US Source To Landing Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl-HK-SGP-daily-sales-source-to-landing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"RunDate": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute JP Source To Landing Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute HK SGP Source To Landing Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl-jp-daily-sales-source-to-landing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunDate": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl-us-daily-sales-source-to-landing')]",
				"[concat(variables('factoryId'), '/pipelines/pl-HK-SGP-daily-sales-source-to-landing')]",
				"[concat(variables('factoryId'), '/pipelines/pl-jp-daily-sales-source-to-landing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl-jp-daily-sales-source-to-landing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy daily sales data for Japan",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Landing Container uRL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": false,
									"wildcardFolderPath": {
										"value": "@concat('/',formatDateTime(variables('JP_S2L_PipelineRundate'),'dd-MMM-yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_jp_sales_input",
								"type": "DatasetReference",
								"parameters": {
									"JPSFTPURL": {
										"value": "@variables('JP_S2L_SFTPSourceURL')",
										"type": "Expression"
									},
									"JPSFTPUserName": {
										"value": "@variables('JP_S2L_SFTPUserName')",
										"type": "Expression"
									},
									"JPSFTPUserPassword": {
										"value": "@variables('JP_S2L_SFTPUserPassword')",
										"type": "Expression"
									},
									"JPSFTPKVURL": {
										"value": "@variables('KVURL')",
										"type": "Expression"
									},
									"JPSalesPipelineRunDate": {
										"value": "@variables('JP_S2L_PipelineRundate')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_jp_sales_output",
								"type": "DatasetReference",
								"parameters": {
									"JPLandingContainerURL": {
										"value": "@variables('JP_S2L_LandingContainerURL')",
										"type": "Expression"
									},
									"SPNID": {
										"value": "@variables('SPNID')",
										"type": "Expression"
									},
									"SPNSecretName": {
										"value": "@variables('SPNSecretName')",
										"type": "Expression"
									},
									"KVURL": {
										"value": "@variables('KVURL')",
										"type": "Expression"
									},
									"JPLandingContainerName": {
										"value": "@variables('JP_S2L_LandingContainerName')",
										"type": "Expression"
									},
									"JPPipelineRundate": {
										"value": "@variables('JP_S2L_PipelineRundate')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set SPN ID",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SPNID",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SPNID, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SEP SPN KV URL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set SPN ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "KVURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_KVURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set SPN KV Sceret Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SEP SPN KV URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SPNSecretName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SPNSecretName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set JP SFTP URL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set SPN KV Sceret Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "JP_S2L_SFTPSourceURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_JP_SFTPURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set SFTP User Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set JP SFTP URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "JP_S2L_SFTPUserName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_JP_SFTPUserName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set JP SFTP User Password",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set SFTP User Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "JP_S2L_SFTPUserPassword",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_JP_SFTPUserPasswordSecret, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Pipeline Run Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set JP SFTP User Password",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "JP_S2L_PipelineRundate",
							"value": {
								"value": "@pipeline().parameters.RunDate",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set JP Landing Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Pipeline Run Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "JP_S2L_LandingContainerName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_JPSalesLandingContainerName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Container uRL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set JP Landing Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "JP_S2L_LandingContainerURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_JPSalesLandingContainerURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"RunDate": {
						"type": "string"
					}
				},
				"variables": {
					"JP_S2L_SFTPSourceURL": {
						"type": "String"
					},
					"JP_S2L_SFTPUserName": {
						"type": "String"
					},
					"JP_S2L_SFTPUserPassword": {
						"type": "String"
					},
					"KVURL": {
						"type": "String"
					},
					"SPNID": {
						"type": "String"
					},
					"SPNSecretName": {
						"type": "String"
					},
					"JP_S2L_PipelineRundate": {
						"type": "String"
					},
					"JP_S2L_LandingContainerURL": {
						"type": "String"
					},
					"JP_S2L_LandingContainerName": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_jp_sales_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_jp_sales_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl-us-daily-sales-source-to-landing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get US Source Excel file Sheet names",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set Run Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_ussalesinputformat",
								"type": "DatasetReference",
								"parameters": {
									"ConfigFileContainer": {
										"value": "@variables('US_S2L_SalesConfigFileContainerName')",
										"type": "Expression"
									},
									"ConfigContainerURL": {
										"value": "@variables('US_S2L_SalesConfigFileContainerURL')",
										"type": "Expression"
									},
									"ConfigContainerSPN": {
										"value": "@variables('US_S2L_SPNID')",
										"type": "Expression"
									},
									"ConfigContainerSPNSecret": {
										"value": "@variables('US_S2L_SPNSecretName')",
										"type": "Expression"
									},
									"ConfigKVURL": {
										"value": "@variables('US_S2L_KVURL')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop Through US Sales Source Excel file Sheets",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get US Source Excel file Sheet names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get US Source Excel file Sheet names').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 2,
							"activities": [
								{
									"name": "Copy US Sales",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFolderPath": {
													"value": "@formatDateTime(variables('US_S2L_PipelineRunDate'),'dd-MMM-yyyy')",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat('US_Sales_',formatDateTime(variables('US_S2L_PipelineRunDate'),'dd-MMM-yyyy'),'.xlsx')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_us_sales_input",
											"type": "DatasetReference",
											"parameters": {
												"SheetName": {
													"value": "@item().Sheet",
													"type": "Expression"
												},
												"USSalesInputKVURL": {
													"value": "@variables('US_S2L_KVURL')",
													"type": "Expression"
												},
												"USSalesInputContainerURL": {
													"value": "@variables('US_S2L_USSalesSourceContainerURL')",
													"type": "Expression"
												},
												"USSalesInputSPNID": {
													"value": "@variables('US_S2L_SPNID')",
													"type": "Expression"
												},
												"USSalesInputSPNSecretName": {
													"value": "@variables('US_S2L_SPNSecretName')",
													"type": "Expression"
												},
												"USSalesInputContainerName": {
													"value": "@variables('US_S2L_USSalesSourceContainerName')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_us_sales_output",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().Sheet",
													"type": "Expression"
												},
												"USSalesOutputKVURL": {
													"value": "@variables('US_S2L_KVURL')",
													"type": "Expression"
												},
												"USSalesOutputContainerURL": {
													"value": "@variables('US_S2L_USSalesLandingContainerURL')",
													"type": "Expression"
												},
												"USSalesOutputSPNID": {
													"value": "@variables('US_S2L_SPNID')",
													"type": "Expression"
												},
												"USSalesOutputSPNSecretName": {
													"value": "@variables('US_S2L_SPNSecretName')",
													"type": "Expression"
												},
												"USSalesOutputContainerName": {
													"value": "@variables('US_S2L_USSalesLandingContainerName')",
													"type": "Expression"
												},
												"USSalesPipelineRunDate": {
													"value": "@variables('US_S2L_PipelineRunDate')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set Config ContainerURL",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_SalesConfigFileContainerURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SalesConfigFileContainerURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set SPN ID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Config ContainerURL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_SPNID",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SPNID, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set SPN Secret Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set SPN ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_SPNSecretName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SPNSecretName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set SourceContainerURL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set SPN Secret Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_USSalesSourceContainerURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_USSalesSourceContainerURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing container URL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set SourceContainerURL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_USSalesLandingContainerURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_USSalesLandingContainerURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set KV URL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Landing container URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_KVURL",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_KVURL, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Config Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set KV URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_SalesConfigFileContainerName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_SalesConfigFileContainerName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Source Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Config Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_USSalesSourceContainerName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_USSalesSourceContainerName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Landing Container Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Source Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_USSalesLandingContainerName",
							"value": {
								"value": "@if(equals(pipeline().globalParameters.Environment,'DEV'),pipeline().globalParameters.DEV_USSalesLandingContainerName, if(equals(pipeline().globalParameters.Environment,'QA'), 'Bx', if(equals(pipeline().globalParameters.Environment,'UAT'), 'Bx', 'C')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Run Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Landing Container Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "US_S2L_PipelineRunDate",
							"value": {
								"value": "@pipeline().parameters.RunDate",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"RunDate": {
						"type": "string",
						"defaultValue": "dd-MMM-yyyy"
					}
				},
				"variables": {
					"US_S2L_SalesConfigFileContainerURL": {
						"type": "String"
					},
					"US_S2L_SPNID": {
						"type": "String"
					},
					"US_S2L_SPNSecretName": {
						"type": "String"
					},
					"US_S2L_USSalesSourceContainerURL": {
						"type": "String"
					},
					"US_S2L_USSalesLandingContainerURL": {
						"type": "String"
					},
					"US_S2L_KVURL": {
						"type": "String"
					},
					"US_S2L_SalesConfigFileContainerName": {
						"type": "String"
					},
					"US_S2L_USSalesSourceContainerName": {
						"type": "String"
					},
					"US_S2L_USSalesLandingContainerName": {
						"type": "String"
					},
					"US_S2L_PipelineRunDate": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-03T08:51:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ussalesinputformat')]",
				"[concat(variables('factoryId'), '/datasets/ds_us_sales_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_us_sales_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_HK_SGP_sales_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_HK_SGP_daily_sales_source",
					"type": "LinkedServiceReference",
					"parameters": {
						"KVURL": {
							"value": "@dataset().HKSGPSalesInputKVURL",
							"type": "Expression"
						},
						"ContainerURL": {
							"value": "@dataset().HKSGPContainerURL",
							"type": "Expression"
						},
						"SPNID": {
							"value": "@dataset().HKSGPSPNID",
							"type": "Expression"
						},
						"SPNSecretName": {
							"value": "@dataset().HKSGPSPNSecretName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"HKSGPSalesInputKVURL": {
						"type": "string"
					},
					"HKSGPContainerURL": {
						"type": "string"
					},
					"HKSGPSPNID": {
						"type": "string"
					},
					"HKSGPSPNSecretName": {
						"type": "string"
					},
					"HKSGPSalesInputContainerName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ASIA_Sales_05-Jul-2023.zip",
						"folderPath": "05-Jul-2023",
						"fileSystem": {
							"value": "@dataset().HKSGPSalesInputContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"compressionCodec": "ZipDeflate",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PK\u0003\u0004\u0014\u0000\u0000\u0000\b\u0000jk�V�!�ir\u0002\u0000\u0000�\u0004\u0000\u0000 \u0000\u0000\u0000HKG_Product_List_05-Jul-2023.csvm�Ko�0\u0014��#��bQ��3J���\f\t\u0014f�f\u001a���L�U'F~P���u�B\u0019v������T���\u0006bY0�\u001e\u000e\u000bZ�\u000e\tӹ�[�e�9��ak�j\u001c�}�6�\u0003�k8���\u0018�{�\"&��3�p�\u0004�\u001a\u001evL��*�r�w\f\u0016�k�WV9\u0013�:\u001d�0Zl7�b\u001a>�����\u0004�\u0016��Ї��JC*hm8.",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_HK_SGP_daily_sales_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_HK_SGP_sales_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_sales_analytics",
					"type": "LinkedServiceReference",
					"parameters": {
						"ContainerURL": {
							"value": "@dataset().HKSGPSalesOutputContainerURL",
							"type": "Expression"
						},
						"SPNID": {
							"value": "@dataset().HKSGPSalesOutputSPNID",
							"type": "Expression"
						},
						"SPNSecretName": {
							"value": "@dataset().HKSGPSalesOutputSPNSecretName",
							"type": "Expression"
						},
						"KVURL": {
							"value": "@dataset().HKSGPSalesOutputKVURL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"HKSGPSalesOutputKVURL": {
						"type": "string"
					},
					"HKSGPSalesOutputContainerURL": {
						"type": "string"
					},
					"HKSGPSalesOutputSPNID": {
						"type": "string"
					},
					"HKSGPSalesOutputSPNSecretName": {
						"type": "string"
					},
					"HKSGPSalesOutputContainerName": {
						"type": "string"
					},
					"HKSGPSalesPipelineRunDate": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@formatDateTime(dataset().HKSGPSalesPipelineRunDate,'dd-MMM-yyyy')",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().HKSGPSalesOutputContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_sales_analytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_jp_sales_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_jp_daily_sales_source",
					"type": "LinkedServiceReference",
					"parameters": {
						"JP_SFTPURL": {
							"value": "@dataset().JPSFTPURL",
							"type": "Expression"
						},
						"JP_SFTPUserName": {
							"value": "@dataset().JPSFTPUserName",
							"type": "Expression"
						},
						"KVURL": {
							"value": "@dataset().JPSFTPKVURL",
							"type": "Expression"
						},
						"KVSecretName": {
							"value": "@dataset().JPSFTPUserPassword",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"JPSFTPURL": {
						"type": "string"
					},
					"JPSFTPUserName": {
						"type": "string"
					},
					"JPSFTPUserPassword": {
						"type": "string"
					},
					"JPSFTPKVURL": {
						"type": "string"
					},
					"JPSalesPipelineRunDate": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "*.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_jp_daily_sales_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_jp_sales_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_sales_analytics",
					"type": "LinkedServiceReference",
					"parameters": {
						"ContainerURL": {
							"value": "@dataset().JPLandingContainerURL",
							"type": "Expression"
						},
						"SPNID": {
							"value": "@dataset().SPNID",
							"type": "Expression"
						},
						"SPNSecretName": {
							"value": "@dataset().SPNSecretName",
							"type": "Expression"
						},
						"KVURL": {
							"value": "@dataset().KVURL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"JPLandingContainerURL": {
						"type": "string"
					},
					"SPNID": {
						"type": "string"
					},
					"SPNSecretName": {
						"type": "string"
					},
					"KVURL": {
						"type": "string"
					},
					"JPLandingContainerName": {
						"type": "string"
					},
					"JPPipelineRundate": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@formatDateTime(dataset().JPPipelineRundate,'dd-MMM-yyyy')",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().JPLandingContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_sales_analytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_us_sales_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_us_daily_sales_source",
					"type": "LinkedServiceReference",
					"parameters": {
						"KVURL": {
							"value": "@dataset().USSalesInputKVURL",
							"type": "Expression"
						},
						"ContainerURL": {
							"value": "@dataset().USSalesInputContainerURL",
							"type": "Expression"
						},
						"SPNID": {
							"value": "@dataset().USSalesInputSPNID",
							"type": "Expression"
						},
						"SPNSecretName": {
							"value": "@dataset().USSalesInputSPNSecretName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"SheetName": {
						"type": "string"
					},
					"USSalesInputKVURL": {
						"type": "string"
					},
					"USSalesInputContainerURL": {
						"type": "string"
					},
					"USSalesInputSPNID": {
						"type": "string"
					},
					"USSalesInputSPNSecretName": {
						"type": "string"
					},
					"USSalesInputContainerName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().SheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "US Sales_02-Jul-2023.xlsx",
						"folderPath": "02-Jul-2023",
						"fileSystem": {
							"value": "@dataset().USSalesInputContainerName",
							"type": "Expression"
						}
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_us_daily_sales_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_us_sales_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_sales_analytics",
					"type": "LinkedServiceReference",
					"parameters": {
						"ContainerURL": {
							"value": "@dataset().USSalesOutputContainerURL",
							"type": "Expression"
						},
						"SPNID": {
							"value": "@dataset().USSalesOutputSPNID",
							"type": "Expression"
						},
						"SPNSecretName": {
							"value": "@dataset().USSalesOutputSPNSecretName",
							"type": "Expression"
						},
						"KVURL": {
							"value": "@dataset().USSalesOutputKVURL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"USSalesOutputKVURL": {
						"type": "string"
					},
					"USSalesOutputContainerURL": {
						"type": "string"
					},
					"USSalesOutputSPNID": {
						"type": "string"
					},
					"USSalesOutputSPNSecretName": {
						"type": "string"
					},
					"USSalesOutputContainerName": {
						"type": "string"
					},
					"USSalesPipelineRunDate": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('US_',dataset().FileName,'_',formatDateTime(dataset().USSalesPipelineRunDate,'dd-MMM-yyyy'),'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@formatDateTime(dataset().USSalesPipelineRunDate,'dd-MMM-yyyy')",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().USSalesOutputContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_sales_analytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ussalesinputformat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_us_sales_input_format_config",
					"type": "LinkedServiceReference",
					"parameters": {
						"ContainerURL": {
							"value": "@dataset().ConfigContainerURL",
							"type": "Expression"
						},
						"SPNID": {
							"value": "@dataset().ConfigContainerSPN",
							"type": "Expression"
						},
						"SPNSecretName": {
							"value": "@dataset().ConfigContainerSPNSecret",
							"type": "Expression"
						},
						"KVURL": {
							"value": "@dataset().ConfigKVURL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"ConfigFileContainer": {
						"type": "string"
					},
					"ConfigContainerURL": {
						"type": "string"
					},
					"ConfigContainerSPN": {
						"type": "string"
					},
					"ConfigContainerSPNSecret": {
						"type": "string"
					},
					"ConfigKVURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "USDailySalesInputFormat.json",
						"fileSystem": {
							"value": "@dataset().ConfigFileContainer",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Sheet": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_us_sales_input_format_config')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_HK_SGP_daily_sales_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"KVURL": {
						"type": "string"
					},
					"ContainerURL": {
						"type": "string"
					},
					"SPNID": {
						"type": "string"
					},
					"SPNSecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnk_HK_SGP_daily_sales_source_properties_typeProperties_url')]",
					"tenant": "[parameters('lnk_HK_SGP_daily_sales_source_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('lnk_HK_SGP_daily_sales_source_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lnk_globalsales_kv",
							"type": "LinkedServiceReference",
							"parameters": {
								"KVURL": {
									"value": "@linkedService().KVURL",
									"type": "Expression"
								}
							}
						},
						"secretName": {
							"value": "@linkedService().SPNSecretName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_globalsales_kv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_globalsales_kv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"KVURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('lnk_globalsales_kv_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_jp_daily_sales_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"JP_SFTPURL": {
						"type": "string"
					},
					"JP_SFTPUserName": {
						"type": "string"
					},
					"KVURL": {
						"type": "string"
					},
					"KVSecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('lnk_jp_daily_sales_source_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('lnk_jp_daily_sales_source_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lnk_globalsales_kv",
							"type": "LinkedServiceReference",
							"parameters": {
								"KVURL": {
									"value": "@linkedService().KVURL",
									"type": "Expression"
								}
							}
						},
						"secretName": {
							"value": "@linkedService().KVSecretName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_globalsales_kv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_sales_analytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ContainerURL": {
						"type": "string"
					},
					"SPNID": {
						"type": "string"
					},
					"SPNSecretName": {
						"type": "string"
					},
					"KVURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnk_sales_analytics_properties_typeProperties_url')]",
					"tenant": "[parameters('lnk_sales_analytics_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('lnk_sales_analytics_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lnk_globalsales_kv",
							"type": "LinkedServiceReference",
							"parameters": {
								"KVURL": {
									"value": "@linkedService().KVURL",
									"type": "Expression"
								}
							}
						},
						"secretName": {
							"value": "@linkedService().SPNSecretName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_globalsales_kv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_us_daily_sales_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"KVURL": {
						"type": "string"
					},
					"ContainerURL": {
						"type": "string"
					},
					"SPNID": {
						"type": "string"
					},
					"SPNSecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnk_us_daily_sales_source_properties_typeProperties_url')]",
					"tenant": "[parameters('lnk_us_daily_sales_source_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('lnk_us_daily_sales_source_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lnk_globalsales_kv",
							"type": "LinkedServiceReference",
							"parameters": {
								"KVURL": {
									"value": "@linkedService().KVURL",
									"type": "Expression"
								}
							}
						},
						"secretName": {
							"value": "@linkedService().SPNSecretName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_globalsales_kv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_us_sales_input_format_config')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ContainerURL": {
						"type": "String"
					},
					"SPNID": {
						"type": "String"
					},
					"SPNSecretName": {
						"type": "String"
					},
					"KVURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnk_us_sales_input_format_config_properties_typeProperties_url')]",
					"tenant": "[parameters('lnk_us_sales_input_format_config_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('lnk_us_sales_input_format_config_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lnk_globalsales_kv",
							"type": "LinkedServiceReference",
							"parameters": {
								"KVURL": {
									"value": "@linkedService().KVURL",
									"type": "Expression"
								}
							}
						},
						"secretName": {
							"value": "@linkedService().SPNSecretName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_globalsales_kv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GlobaSalesAzureIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}